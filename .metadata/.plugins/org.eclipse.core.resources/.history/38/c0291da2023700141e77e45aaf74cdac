package com.decker.smrsremote;

import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;



public class Translation 
{
    static byte[] Encrypt(Context AppContext, byte[]sendData, byte[] Key,byte[] InitialVector)
    {
        Encrypt encryption = new Encrypt();
        byte[] encryptedData = null;
        try 
        {
		encryptedData = encryption.encrypt(sendData, Key, InitialVector);
		}
		catch(NoSuchAlgorithmException NSAE){
			ToastMessage.showToast(Appcontext,NSAE.toString());
			canSend = false;
		}
		catch(NoSuchPaddingException NSPE){
			ToastMessage.showToast(Appcontext,NSPE.toString());
			canSend = false;
		}
		catch(InvalidKeyException IKE){
			ToastMessage.showToast(Appcontext,IKE.toString());
			canSend = false;
		}
		catch(InvalidAlgorithmParameterException IAPE){
			ToastMessage.showToast(Appcontext,IAPE.toString());
			canSend = false;
		}
		catch(IllegalBlockSizeException IBSE){
			ToastMessage.showToast(Appcontext,IBSE.toString());
			canSend = false;
		}
		catch(BadPaddingException BPE){
			ToastMessage.showToast(Appcontext,BPE.toString());
			canSend = false;
		}
        return encryptedData;
    }
    static String decrypt()
    {
        return "ToDo";
    }
}
