package com.decker.smrsremote;

import java.util.ArrayList;

import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteException;
import android.database.sqlite.SQLiteStatement;
import android.widget.Toast;

public class DBCommander {
	MySQLiteHelper helper;
	private SQLiteDatabase db;
	Context appContext;

	public DBCommander(Context context) {
		appContext = context;
		helper = new MySQLiteHelper(context);
		try {
			db = helper.getWritableDatabase();
		} catch (SQLiteException ex) {
			showToast("Error: failed to open database, please restart application");
		}

	}

	public ArrayList<String> getList() {

		Cursor tempCursor = db.rawQuery(
				"SELECT * FROM " + helper.getTableName(), new String[] {});
		ArrayList<String> tempArrayList = cursorToArrayList(tempCursor);
		tempCursor.close();
		return tempArrayList;
	}

	public void closeDB() {
		db.close();
	}

	public void openDB() {
		try {
			db = helper.getWritableDatabase();
		} catch (SQLiteException ex) {
			showToast("Error:Failed to open data base");
		}
	}

	public boolean isDbOpen() {
		return db.isOpen();
	}

	private ArrayList<String> cursorToArrayList(Cursor cursor) {
		ArrayList<String> temp = new ArrayList<String>();
		if (cursor != null) {
			cursor.moveToFirst();
			for (cursor.moveToFirst(); !cursor.isAfterLast(); cursor
					.moveToNext()) {
				if (!cursor.getString(0).equalsIgnoreCase("android_metadata")) {
					temp.add(cursor.getString(0));
				}
			}
		}
		cursor.close();
		return temp;
	}

	private void showToast(String message) {
		Toast toast = Toast.makeText(appContext, message, Toast.LENGTH_LONG);
		toast.show();
	}

	public void addItemsToListDB(ArrayList<StarMadeServer> itemsList) {
		String sql = "INSERT INTO " + helper.getTableName() + " VALUES(?,?)";
		SQLiteStatement statement = db.compileStatement(sql);
		db.beginTransaction();
		for (StarMadeServer item : itemsList) {
			statement.clearBindings();
			statement.bindString(1, item.getName());
			statement.bindString(2, item.getIP());
			statement.execute();
		}
		db.setTransactionSuccessful();
		db.endTransaction();
	}
}
